using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Area51.SoftwareModeler.Models;

namespace Area51.SoftwareModeler.Model.CodeGen
{
    class MethodCodeGen
    {
        private Method m;
        public MethodCodeGen(Method method)
        {
            m = method;
        }

        public string generateJava()
        {
            string visibility = m.Visibility.ToString().ToLower().Trim();
            if (m.Visibility.Equals(Visibility.Default)) visibility = "";
            string returnType = m.ReturnType.Trim();
            string name = fixName(m.Name).Trim();
            string parameteres = fixParameters(m.Parameters);
            return visibility + " " + returnType + " " + name + "(" + parameteres + ")" +
                   "\t{" +
                   "\n\t /* AUTOGENERATED METHOD */ \n" +
                   "\t}\n\n";
        }

        private string fixName(string s)
        {
            string[] tokens = s.Split(' ');
            string name = "";
            foreach (string token in tokens)
            {
                name += token.Substring(0, 1).ToLower() + token.Substring(1, token.Length - 1);
            }

            return name;
        }

        private string fixParameters(string s)
        {
            string[] param = s.Split(',');
            string defaultArgName = "arg";
            int defaultArgNo = 0;
            string args = "";
            foreach (var p in param)
            {
                string[] val = p.Trim().Split(' ');
                string type = val[0];
                string name = val.Length > 1 ? val[1] : defaultArgName + defaultArgNo++;
                if (args.Length != 0) args += ", ";
                args += (type + " " + name);
            }
            return args;
        }
    }
}
