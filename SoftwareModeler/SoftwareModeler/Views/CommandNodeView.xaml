<UserControl x:Class="Area51.SoftwareModeler.Views.CommandNodeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Area51.SoftwareModeler.Views"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             xmlns:model="clr-namespace:Area51.SoftwareModeler.Models.Commands"
             mc:Ignorable="d" 
             d:DesignHeight="25"
             Canvas.Left="{Binding BranchLayer, Converter={StaticResource nodeCoordinateConverter}}" 
             Canvas.Top="{Binding Y}"
             >
    <UserControl.Resources>
        <Style x:Key="ExpandStyle" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCollapsed}" Value="True">
                    <Setter Property="Text" Value="-"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsCollapsed}" Value="False">
                    <Setter Property="Text" Value="+"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BorderStyle" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCollapsed}" Value="True">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsCollapsed}" Value="False">
                    <Setter Property="BorderBrush" Value="{Binding Color}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="EllipseStyle" TargetType="Ellipse">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCollapsed}" Value="True">
                    <Setter Property="Stroke" Value="Transparent"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsCollapsed}" Value="False">
                    <Setter Property="Stroke" Value="{Binding Color}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CollapseableStyle" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCollapsed}" Value="True">
                    <Setter Property="Width" Value="0"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsCollapsed}" Value="False">
                    <Setter Property="Width" Value="NaN"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="Transparent" Style="{ StaticResource CollapseableStyle}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid Width="20" Height="20">
        <Ellipse Grid.Row="0" Grid.Column="0" Width="20" Height="20" Style="{StaticResource EllipseStyle}" StrokeThickness="3"/>
        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource ExpandStyle}"/>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseUp" >
                    <cmd:EventToCommand Command="{Binding DataContext.CollapseNodeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Grid>
        <Border Grid.Column="1" BorderThickness="2,2,4,4" Style="{StaticResource BorderStyle}" CornerRadius="4" >
            <TextBlock Background="LightGray"  Padding="2" Height="20" HorizontalAlignment="Left" Text="{Binding Path=CommandType}"></TextBlock>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseUp" >
                    <cmd:EventToCommand Command="{Binding DataContext.CherryPickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Border>
        
    </Grid>
    
</UserControl>
