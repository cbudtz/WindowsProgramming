<UserControl x:Class="Area51.SoftwareModeler.Views.ClassUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             xmlns:local="clr-namespace:Area51.SoftwareModeler.Views"
             xmlns:models="clr-namespace:Area51.SoftwareModeler.Models;assembly=SoftwareModeler.Model"
             xmlns:helpers="clr-namespace:Area51.SoftwareModeler.Helpers;assembly=SoftwareModeler.Model"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Canvas.Left="{Binding X}" Canvas.Top="{Binding Y}" Width="{Binding Width}" Height="{Binding Height}"
             d:DataContext="{d:DesignData }">

    <UserControl.Resources>
       <models:VisibilityConverter x:Key="VisibilityConverter"/>
        <ObjectDataProvider x:Key="VisibilityEnum"
                MethodName="GetDescriptions" 
                ObjectType="{x:Type helpers:HelperFunctions}">
            
            <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="models:Visibility" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


    </UserControl.Resources>

    <Border Name="borderName" BorderBrush="Gray" Background="LightGray" CornerRadius="6" BorderThickness="2,2,5,5">
        <Grid Margin="5,5,5,5" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="Blue">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            
            
            <TextBlock Grid.Row="0" Text="{Binding name}" HorizontalAlignment="Stretch" TextAlignment="Center">
                <TextBlock.Style>
                    
                    <Style TargetType="{x:Type TextBlock}">

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAbstract}" Value="True">
                                <Setter Property="FontStyle" Value="Italic"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <cmd:EventToCommand Command="{Binding DataContext.EditClassContentCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                        </i:EventTrigger>
		                <local:EventTriggerWithoutPropagation EventName="MouseDown" >
                            <cmd:EventToCommand Command="{Binding DataContext.MouseDownShapeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
                        </local:EventTriggerWithoutPropagation>
                        <local:EventTriggerWithoutPropagation EventName="MouseUp">
                            <cmd:EventToCommand Command="{Binding DataContext.MouseUpShapeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
                        </local:EventTriggerWithoutPropagation>
                 
                    </i:Interaction.Triggers>
            </TextBlock>
            <!--<ListView 
                Grid.Row="1"
                ItemsSource="{Binding Attributes}"/>
            <ListView 
                Grid.Row="2"
                ItemsSource="{Binding Methods}"/>-->
            <DataGrid 
                Grid.Row="1" 
                IsSynchronizedWithCurrentItem="True"
                ItemsSource="{Binding Attributes}" 
                AutoGenerateColumns="False" 
                BorderThickness="0" 
                HeadersVisibility="None" GridLinesVisibility="None">

                <DataGrid.Columns>
                    <DataGridComboBoxColumn 
                        ItemsSource="{Binding Source={StaticResource VisibilityEnum}, Mode=OneWay}"
                        SelectedItemBinding="{Binding Path= Visibility, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged, 
                                                Converter={StaticResource VisibilityConverter}}" 
                        />
                    
                    <DataGridTextColumn Width="4*" Binding="{Binding Name, UpdateSourceTrigger=LostFocus}" />
                    <DataGridTextColumn Width="4*" Binding="{Binding Type, UpdateSourceTrigger=LostFocus}" />
                </DataGrid.Columns>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedCellsChanged">
                        <cmd:EventToCommand Command="{Binding DataContext.EditClassContentCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>

            <Rectangle Grid.Row="2" Width="Auto" Height="2" StrokeThickness="1" Stroke="Black"/>
            <DataGrid 
                Grid.Row="3" 
                CanUserAddRows="True"
                ItemsSource="{Binding Methods}" 
                AutoGenerateColumns="False" 
                BorderThickness="0" 
                HeadersVisibility="None" 
                GridLinesVisibility="None" >

                <DataGrid.Columns>
                    <DataGridComboBoxColumn 
                        ItemsSource="{Binding Source={StaticResource VisibilityEnum}, Mode=OneWay}"
                        SelectedItemBinding="{Binding Path= Visibility, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged, 
                                                Converter={StaticResource VisibilityConverter}}" 
                        />

                    <DataGridTextColumn Width="3*" Binding="{Binding Name, UpdateSourceTrigger=LostFocus}" />
                    <DataGridTextColumn Width="3*" Binding="{Binding Parameters, UpdateSourceTrigger=LostFocus}" />
                    <DataGridTextColumn Width="3*" Binding="{Binding ReturnType, UpdateSourceTrigger=LostFocus}" />
                </DataGrid.Columns>


                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DataContextChanged" >
                        <cmd:EventToCommand Command="{Binding DataContext.EditClassContentCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>


            <!--<Label Width="5" HorizontalAlignment="Right" Grid.Row="3"/>-->

            <!--<TextBox HorizontalContentAlignment="Center" FontSize="20" Text="{Binding Name}"></TextBox>
            <DataGrid ColumnHeaderHeight ="0" Name="attributes" ItemsSource="{Binding Attributes}" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Type}"/>
                    <DataGridTextColumn Binding="{Binding Name}"/>
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid ColumnHeaderHeight ="0"  Name="Methods" ItemsSource="{Binding Methods}" AutoGenerateColumns="False">
                <DataGrid.Columns >
                    -->
            <!--     <DataGridTextColumn Binding="{Binding Visibility}"/>
                    <DataGridTextColumn Binding="{Binding Name}"/>
                    <DataGridTextColumn Binding="{Binding ParameterString}"/>-->
            <!--
                    <DataGridTextColumn Binding="{Binding MethodString}"/>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Name="MethodGrid">

            </Grid>-->

        </Grid>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseDown" >
                <cmd:EventToCommand Command="{Binding DataContext.MouseDownShapeResizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseUp" >
                <cmd:EventToCommand Command="{Binding DataContext.MouseUpShapeResizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseMove" >
                <cmd:EventToCommand Command="{Binding DataContext.MouseMoveShapeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
    </Border>
</UserControl>
